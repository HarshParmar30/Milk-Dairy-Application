// Generated by view binder compiler. Do not edit!
package com.rk.milkdairy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.rk.milkdairy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomerDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Idx;

  @NonNull
  public final TextView MobileNox;

  @NonNull
  public final TextView Namex;

  @NonNull
  public final TextView Ratex;

  @NonNull
  public final TextView emptyx;

  private CustomerDetailsBinding(@NonNull ConstraintLayout rootView, @NonNull TextView Idx,
      @NonNull TextView MobileNox, @NonNull TextView Namex, @NonNull TextView Ratex,
      @NonNull TextView emptyx) {
    this.rootView = rootView;
    this.Idx = Idx;
    this.MobileNox = MobileNox;
    this.Namex = Namex;
    this.Ratex = Ratex;
    this.emptyx = emptyx;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomerDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomerDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.customer_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomerDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Idx;
      TextView Idx = ViewBindings.findChildViewById(rootView, id);
      if (Idx == null) {
        break missingId;
      }

      id = R.id.MobileNox;
      TextView MobileNox = ViewBindings.findChildViewById(rootView, id);
      if (MobileNox == null) {
        break missingId;
      }

      id = R.id.Namex;
      TextView Namex = ViewBindings.findChildViewById(rootView, id);
      if (Namex == null) {
        break missingId;
      }

      id = R.id.Ratex;
      TextView Ratex = ViewBindings.findChildViewById(rootView, id);
      if (Ratex == null) {
        break missingId;
      }

      id = R.id.emptyx;
      TextView emptyx = ViewBindings.findChildViewById(rootView, id);
      if (emptyx == null) {
        break missingId;
      }

      return new CustomerDetailsBinding((ConstraintLayout) rootView, Idx, MobileNox, Namex, Ratex,
          emptyx);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
