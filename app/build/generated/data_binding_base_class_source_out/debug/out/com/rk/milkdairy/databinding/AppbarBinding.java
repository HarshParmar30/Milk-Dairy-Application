// Generated by view binder compiler. Do not edit!
package com.rk.milkdairy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.rk.milkdairy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppbarBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ConstraintLayout appbar;

  @NonNull
  public final ImageView infoIcon;

  @NonNull
  public final ImageView langElipses;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final Toolbar toolbarName;

  private AppbarBinding(@NonNull ConstraintLayout rootView, @NonNull AppBarLayout appBarLayout,
      @NonNull ConstraintLayout appbar, @NonNull ImageView infoIcon, @NonNull ImageView langElipses,
      @NonNull TextView textView2, @NonNull Toolbar toolbarName) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.appbar = appbar;
    this.infoIcon = infoIcon;
    this.langElipses = langElipses;
    this.textView2 = textView2;
    this.toolbarName = toolbarName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppbarBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.appbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      ConstraintLayout appbar = (ConstraintLayout) rootView;

      id = R.id.info_icon;
      ImageView infoIcon = ViewBindings.findChildViewById(rootView, id);
      if (infoIcon == null) {
        break missingId;
      }

      id = R.id.lang_elipses;
      ImageView langElipses = ViewBindings.findChildViewById(rootView, id);
      if (langElipses == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.toolbarName;
      Toolbar toolbarName = ViewBindings.findChildViewById(rootView, id);
      if (toolbarName == null) {
        break missingId;
      }

      return new AppbarBinding((ConstraintLayout) rootView, appBarLayout, appbar, infoIcon,
          langElipses, textView2, toolbarName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
