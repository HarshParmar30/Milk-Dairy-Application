// Generated by view binder compiler. Do not edit!
package com.rk.milkdairy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.rk.milkdairy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RegisterStepOneBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox cbReferal;

  @NonNull
  public final EditText etRegDairy;

  @NonNull
  public final EditText etRegMobile;

  @NonNull
  public final EditText etRegPass;

  @NonNull
  public final EditText etRegReferalcode;

  @NonNull
  public final LinearLayout lvEts;

  @NonNull
  public final RadioGroup rgReferal;

  private RegisterStepOneBinding(@NonNull LinearLayout rootView, @NonNull CheckBox cbReferal,
      @NonNull EditText etRegDairy, @NonNull EditText etRegMobile, @NonNull EditText etRegPass,
      @NonNull EditText etRegReferalcode, @NonNull LinearLayout lvEts,
      @NonNull RadioGroup rgReferal) {
    this.rootView = rootView;
    this.cbReferal = cbReferal;
    this.etRegDairy = etRegDairy;
    this.etRegMobile = etRegMobile;
    this.etRegPass = etRegPass;
    this.etRegReferalcode = etRegReferalcode;
    this.lvEts = lvEts;
    this.rgReferal = rgReferal;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RegisterStepOneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RegisterStepOneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.register_step_one, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RegisterStepOneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cb_referal;
      CheckBox cbReferal = ViewBindings.findChildViewById(rootView, id);
      if (cbReferal == null) {
        break missingId;
      }

      id = R.id.et_reg_dairy;
      EditText etRegDairy = ViewBindings.findChildViewById(rootView, id);
      if (etRegDairy == null) {
        break missingId;
      }

      id = R.id.et_reg_mobile;
      EditText etRegMobile = ViewBindings.findChildViewById(rootView, id);
      if (etRegMobile == null) {
        break missingId;
      }

      id = R.id.et_reg_pass;
      EditText etRegPass = ViewBindings.findChildViewById(rootView, id);
      if (etRegPass == null) {
        break missingId;
      }

      id = R.id.et_reg_referalcode;
      EditText etRegReferalcode = ViewBindings.findChildViewById(rootView, id);
      if (etRegReferalcode == null) {
        break missingId;
      }

      LinearLayout lvEts = (LinearLayout) rootView;

      id = R.id.rg_referal;
      RadioGroup rgReferal = ViewBindings.findChildViewById(rootView, id);
      if (rgReferal == null) {
        break missingId;
      }

      return new RegisterStepOneBinding((LinearLayout) rootView, cbReferal, etRegDairy, etRegMobile,
          etRegPass, etRegReferalcode, lvEts, rgReferal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
